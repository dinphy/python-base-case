"""
参数: 可以在函数调用的时候. 给函数传递一些信息

分类:
    1. 形参, 在函数定义的时候. 需要准备一些变量来接收信息
        1. 位置参数, 按照位置一个一个的去声明变量
        2. 默认值参数,  在函数声明的时候给变量一个默认值, 如果实参不传递信息. 此时默认值生效, 否则就不生效
        3. 动态传参.
             1. *args,  表示接收所有的位置参数的动态传参
             2. **kwargs, 表示接收所有的关键字的动态传参

        顺序*: 位置 > *args > 默认值 > **kwargs

        上述参数可以随意搭配使用

    2. 实参, 实际在调用的时候传递的信息
        1. 位置参数. 按照位置进行传递参数
        2. 关键字参数. 按照参数的名字进行传递参数
        3. 混合参数.
            顺序: 位置参数放前面, 关键字参数放后面 -> 否则报错! 官方不让这么干
        实参在执行的时候. 必须要保障形参有数据



"""

# # 1.骂谁?  2.骂道什么程度?
# def maren(ren, lvl):  # 形参
#     print("1. 怒目而视", ren)
#     print("2. 验证交涉", ren)
#     if lvl > 99:
#         print("3. 死不要脸")
#     else:
#         print("3. 你愁啥")
#     print("4. 骂完手工")
#
#
# maren("破键盘", 188)  # 在调用函数的时候. 才能知道到底骂谁, 骂道什么程度  -> 实参
# maren("破鼠标", 10)
# # maren("破电脑", 999)


# 请用函数编写一个计算器, 能计算 + - * / 四则运算  a + b
# def jisuan(a, opt, b):
#     if opt == "+":
#         print(a + b)
#     elif opt == '-':
#         print(a - b)
#     elif opt == '*':
#         print(a * b)
#     elif opt == '/':
#         print(a / b)
#     else:
#         print("滚犊子")
#
#
# jisuan(999, "+", 666)
# jisuan(999, "-", 666)
# jisuan(999, "*", 666)
# jisuan(999, "/", 666)
# jisuan(999, "^&*", 666)


# 实参分类
# def chi(zhu, fu, tang, tian):
#     print(zhu, fu, tang, tian)
#
#
# # chi("大米饭", "西红柿炒鸡蛋", "紫菜蛋花汤", "哈根达斯")
# # chi(zhu="小米饭", tang="胡辣汤", fu="韭菜炒大腰子", tian="老中街冰棍")
# # chi("小米饭", "胡辣汤", tang="韭菜炒大腰子", tian="老中街冰棍")
#
# # chi()  实参在执行的时候. 必须要保障形参有数据
#
# open("xxxx", mode="xx", encoding="xxx")


# 形参分类:

# def luru(name, age, gender="男"):
#     print(name, age, gender)
#
#
# luru("张三", 18)
# luru("李四", 28)
# luru("王二麻子", 38)
# luru("吴老二", 14)
# luru("赵敏", 12, "女")
# luru("周芷若", 11, "女")


# def chi(*food):  # * 表示位置参数的动态传参, *接收到的值会被统一放在一个元组里面
#     print(food)
#
#
# chi('大米饭', "烧茄子", '紫菜蛋花汤', "哈根达斯")
# chi("大米饭")
# chi("大米饭", "烧茄子")
# chi("大米饭", "紫菜蛋花汤")
# chi("大米饭", "紫菜蛋花汤", "紫菜蛋花汤")


# def chi(**food):  # ** 表示接收关键字的动态传参, 接收到的所有参数都会被处理成字典
#     print(food)
#
#
# chi(fu="木须柿子", zhu="小米饭")

#             何时能产生默认值
# def func(a, b, *args, c="哈哈", **kwargs):
#     print(a, b, c, args, kwargs)
#
#
# func(1,2,3,4, c="呵呵", hello=456, hahalou =654)


# def func(*args, **kwargs):  # 没有限制的接收任何参数
#     print(args, kwargs)
#
# func()  # (), {}
# func(1) #  (1, ), {}
# func(1,2,3,4,4, a=2)  # (1,2,3,4,4), {"a":2}
# func(1,2,3,4, c=4, a=2)# (1,2,3,4), {"c":4, "a":2}
#
#


# stu_lst = ["流川枫", '樱木', "大老王", "隔壁二老王", "隔壁二老王", "隔壁二老王", "隔壁二老王", "隔壁二老王", "隔壁二老王", "隔壁二老王", "隔壁二老王", "隔壁二老王", "隔壁二老王", "隔壁二老王", "隔壁二老王", "隔壁二老王", "隔壁二老王", "隔壁二老王"]
#
# def func(*args):
#     print(args)
#
#
# func(*stu_lst)   # *在实参位置, 是把列表打散成位置参数进行传递
#                  # ** 在实参位置, 可以把字典自动转化成关键字参数进行传递

